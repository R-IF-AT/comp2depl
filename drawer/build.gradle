configurations {
    epsilon
}

repositories {
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    mavenCentral()
}

dependencies {
    epsilon 'org.eclipse.epsilon:org.eclipse.epsilon.workflow:2.4.0'
    epsilon 'org.eclipse.epsilon:org.eclipse.epsilon.workflow.emf:2.4.0'
    epsilon ('org.eclipse.emfatic:org.eclipse.emfatic.core:1.1.0-SNAPSHOT') {
        exclude group: 'org.eclipse.platform'
    }
}

task setupEpsilonTasks {
    // Set up the core Epsilon tasks
    ant.taskdef(resource: 'org/eclipse/epsilon/workflow/tasks/tasks.xml', 
        classpath: configurations.epsilon.asPath, loaderref: 'epsilon')
    // Set up the Epsilon EMF tasks
    ant.taskdef(resource: 'org/eclipse/epsilon/workflow/tasks/emf/tasks.xml', 
        classpath: configurations.epsilon.asPath, loaderref: 'epsilon')
    // Set logging level to info so that EOL's println() is not suppressed
    ant.lifecycleLogLevel = 'INFO'
}

task run {
    dependsOn tasks.setupEpsilonTasks
    // Load the library.flexmi EMF model
    ant.'epsilon.emf.loadModel'(name: 'DeploymentModel', 
        modelfile: 'deployment.flexmi', metamodelfile: 'deployment.emf')

    // Run library.eol against it
    ant.'epsilon.egl'(src: 'deployment.egl',target:'diagram.gv'){ model(ref: 'DeploymentModel') }
    apply plugin: 'com.github.jeysal.graphviz'
}

task draw {
    dependsOn tasks.graphviz
}

buildscript {
    repositories {
        maven { url 'https://plugins.gradle.org/m2' }
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath 'com.github.jeysal:gradle-graphviz-plugin:master-SNAPSHOT'
    }
}

graphviz {
    formats = ['svg']

    // Directory to scan for source files. Defaults to src/main/graphviz.
    sourceDir = file('.')
    
    // Directory to generate Graphviz output into. Defaults to build/graphviz.
    outputDir = file('.')
}